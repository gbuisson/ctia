(ns ctia.exploit-target.routes
  (:require [ctia.domain.entities :refer [realize-exploit-target]]
            [ctia.http.routes
             [common :refer [BaseEntityFilterParams PagingParams SourcableEntityFilterParams]]
             [crud :refer [entity-crud-routes]]]
            [ctia.schemas
             [core :refer [ExploitTarget NewExploitTarget PartialExploitTarget PartialExploitTargetList]]
             [sorting :as sorting]]
            [schema-tools.core :as st]
            [schema.core :as s]))

(def exploit-target-sort-fields
  (apply s/enum sorting/exploit-target-sort-fields))

(s/defschema ExploitTargetFieldsParam
  {(s/optional-key :fields) [exploit-target-sort-fields]})

(s/defschema ExploitTargetSearchParams
  (st/merge
   PagingParams
   BaseEntityFilterParams
   SourcableEntityFilterParams
   ExploitTargetFieldsParam
   {:query s/Str
    (s/optional-key :sort_by) exploit-target-sort-fields}))

(def ExploitTargetGetParams ExploitTargetFieldsParam)

(s/defschema ExploitTargetByExternalIdQueryParams
  (st/merge
   PagingParams
   ExploitTargetFieldsParam))

(def exploit-target-routes
  (entity-crud-routes
   {:entity :exploit-target
    :new-schema NewExploitTarget
    :entity-schema ExploitTarget
    :get-schema PartialExploitTarget
    :get-params ExploitTargetGetParams
    :list-schema PartialExploitTargetList
    :search-schema PartialExploitTargetList
    :external-id-q-params ExploitTargetByExternalIdQueryParams
    :search-q-params ExploitTargetSearchParams
    :new-spec :new-exploit-target/map
    :realize-fn realize-exploit-target
    :get-capabilities :read-exploit-target
    :post-capabilities :create-exploit-target
    :put-capabilities :create-exploit-target
    :delete-capabilities :delete-exploit-target
    :search-capabilities :search-exploit-target
    :external-id-capabilities #{:read-exploit-target :external-id}}))
