(ns ctia.malware.routes
  (:require [ctia.domain.entities :refer [realize-malware]]
            [ctia.http.routes
             [common :refer [BaseEntityFilterParams PagingParams SourcableEntityFilterParams]]
             [crud :refer [entity-crud-routes]]]
            [ctia.schemas
             [core :refer [Malware NewMalware PartialMalware PartialMalwareList]]
             [sorting :as sorting]]
            [schema-tools.core :as st]
            [schema.core :as s]))

(def malware-sort-fields
  (apply s/enum sorting/malware-sort-fields))

(s/defschema MalwareFieldsParam
  {(s/optional-key :fields) [malware-sort-fields]})

(s/defschema MalwareSearchParams
  (st/merge
   PagingParams
   BaseEntityFilterParams
   SourcableEntityFilterParams
   MalwareFieldsParam
   {:query s/Str}
   (st/optional-keys
    {:labels s/Str
     :kill_chain_phases.kill_chain_name s/Str
     :kill_chain_phases.phase_name s/Str
     :sort_by malware-sort-fields})))

(s/defschema MalwareGetParams MalwareFieldsParam)

(s/defschema MalwareByExternalIdQueryParams
  (st/merge PagingParams
            MalwareFieldsParam))

(def malware-routes
  (entity-crud-routes
   {:entity :malware
    :new-schema NewMalware
    :entity-schema Malware
    :get-schema PartialMalware
    :get-params MalwareGetParams
    :list-schema PartialMalwareList
    :search-schema PartialMalwareList
    :external-id-q-params MalwareByExternalIdQueryParams
    :search-q-params MalwareSearchParams
    :new-spec :new-malware/map
    :realize-fn realize-malware
    :get-capabilities :read-malware
    :post-capabilities :create-malware
    :put-capabilities :create-malware
    :delete-capabilities :delete-malware
    :search-capabilities :search-malware
    :external-id-capabilities #{:read-malware :external-id}}))
